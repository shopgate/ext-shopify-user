{
  "info": {
    "_postman_id": "8856f8b4-f677-4e1c-828e-8118e080e209",
    "name": "Shopify Connect",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "e5c1333c-9991-431d-be39-165583d3bbc8",
      "name": "addAddress",
      "item": [
        {
          "_postman_id": "bc75aa5e-10fc-4130-aa24-722f63652fa0",
          "name": "Errors",
          "item": [
            {
              "_postman_id": "acebeba6-fa29-4d83-931e-b8e5880e4d85",
              "name": "Unauthorized",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "5441a299-5344-4276-adc1-997309af883a",
                    "type": "text/javascript",
                    "exec": ["", ""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ee211efe-d741-4165-8dbe-a527267c58f5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 500\", function () {",
                      "    pm.response.to.have.status(500);",
                      "});",
                      "",
                      "var jsonData = pm.response.json();",
                      "pm.test(\"User not logged in error\", function () {",
                      "    pm.expect(jsonData.error.code).to.be.eq('EACCESS');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"address\": {}\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_address_add}}",
                  "host": ["{{domain}}{{endpoint_address_add}}"]
                }
              },
              "response": []
            },
            {
              "_postman_id": "93431669-6e31-44e9-8244-a921e8c652ea",
              "name": "Login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Cache-Control",
                    "value": "no-cache"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw":
                    "{\n\t\"strategy\": \"basic\",\n\t\"parameters\": {\n\t\t\"login\": \"{{username}}\",\n\t\t\"password\": \"{{password}}\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_login}}",
                  "host": ["{{domain}}{{endpoint_login}}"]
                }
              },
              "response": []
            },
            {
              "_postman_id": "c7e04db3-af87-480a-bb4d-9d1d5b12cbf8",
              "name": "missing address data",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a83c69bc-630f-4eab-a13b-f148039f86e4",
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f2fa0f72-345e-4425-9ab5-e5269ba148fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 500\", function () {",
                      "    pm.response.to.have.status(500);",
                      "});",
                      "",
                      "var jsonData = pm.response.json();",
                      "pm.test(\"Correct missing address error is thrown\", function () {",
                      "    pm.expect(jsonData.error.message).to.be.eq('Empty address data.');",
                      "    pm.expect(jsonData.error.code).to.be.eq('EINVALIDCALL');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"address\": {}\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_address_add}}",
                  "host": ["{{domain}}{{endpoint_address_add}}"]
                }
              },
              "response": []
            },
            {
              "_postman_id": "c1d5e53b-00e9-447b-9720-77fc003b9288",
              "name": "bad country name",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "99fbc486-c97a-4d47-9859-b40b5dce98db",
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "9179b8c0-3e1e-401d-92ca-fdcde6c7f05f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 500\", function () {",
                      "    pm.response.to.have.status(500);",
                      "});",
                      "",
                      "var jsonData = pm.response.json();",
                      "pm.test(\"Incorrect validation error structure\", function () {",
                      "    pm.expect(jsonData.error.code).to.eql('EVALIDATION');",
                      "    pm.expect(jsonData.error.validationErrors.length).to.be.gte(1);",
                      "    jsonData.error.validationErrors.forEach((error) => {",
                      "        pm.expect(error.path).to.not.be.empty;",
                      "        pm.expect(error.message).to.not.be.empty;",
                      "    })",
                      "});",
                      "",
                      "pm.test(\"Correct country error is shown\", function () {",
                      "    pm.expect(jsonData.error.validationErrors[0].path).to.be.eq('country');",
                      "    pm.expect(jsonData.error.validationErrors[0].message).to.be.eq('\"TESTER\" is not a valid country');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"address\": {\n        \"country\": \"TESTER\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_address_add}}",
                  "host": ["{{domain}}{{endpoint_address_add}}"]
                }
              },
              "response": []
            },
            {
              "_postman_id": "90b460ce-c25d-4e67-b694-f21b19556ef2",
              "name": "country is required",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "606b8162-02a0-4cab-915e-dd7a918cfc84",
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "296778fc-1647-42f1-8f7d-013c97e74154",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 500\", function () {",
                      "    pm.response.to.have.status(500);",
                      "});",
                      "",
                      "var jsonData = pm.response.json();",
                      "pm.test(\"Incorrect validation error structure\", function () {",
                      "    pm.expect(jsonData.error.code).to.eql('EVALIDATION');",
                      "    pm.expect(jsonData.error.validationErrors.length).to.be.gte(1);",
                      "    jsonData.error.validationErrors.forEach((error) => {",
                      "        pm.expect(error.path).to.not.be.empty;",
                      "        pm.expect(error.message).to.not.be.empty;",
                      "    })",
                      "});",
                      "",
                      "pm.test(\"Correct country error is shown\", function () {",
                      "    pm.expect(jsonData.error.validationErrors[0].path).to.be.eq('country');",
                      "    pm.expect(jsonData.error.validationErrors[0].message).to.be.eq('\"Country\" is required');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"address\": {\n        \"province\":\"{{seed}}-province\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_address_add}}",
                  "host": ["{{domain}}{{endpoint_address_add}}"]
                }
              },
              "response": []
            },
            {
              "_postman_id": "885acfdb-8c92-45ec-9c1d-35e7470aff82",
              "name": "incorrect province",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "606b8162-02a0-4cab-915e-dd7a918cfc84",
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d4ccf64c-b961-4aaa-bc8f-cb287d4ca0d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 500\", function () {",
                      "    pm.response.to.have.status(500);",
                      "});",
                      "",
                      "var jsonData = pm.response.json();",
                      "pm.test(\"Incorrect validation error structure\", function () {",
                      "    pm.expect(jsonData.error.code).to.eql('EVALIDATION');",
                      "    pm.expect(jsonData.error.validationErrors.length).to.be.gte(1);",
                      "    jsonData.error.validationErrors.forEach((error) => {",
                      "        pm.expect(error.path).to.not.be.empty;",
                      "        pm.expect(error.message).to.not.be.empty;",
                      "    })",
                      "});",
                      "",
                      "pm.test(\"Correct province error is shown\", function () {",
                      "    pm.expect(jsonData.error.validationErrors[0].path).to.be.eq('province');",
                      "    pm.expect(jsonData.error.validationErrors[0].message).to.be.eq('\"Province\" is not valid');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw":
                    "{\n\t\"address\": {\n        \"country\": \"US\",\n        \"province\":\"{{seed}}-province\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_address_add}}",
                  "host": ["{{domain}}{{endpoint_address_add}}"]
                }
              },
              "response": []
            },
            {
              "_postman_id": "a7b75711-e5a6-4700-83c2-5da57787d49a",
              "name": "Add GB address",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2ff57438-c4b5-4fe9-a818-ea0b7d5e7b80",
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f3da19f1-027f-4679-99c5-f4fea9057f0f",
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"address\": {\n\t\t\"street1\": \"TEST ADDRESS\",\n        \"country\": \"GB\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_address_add}}",
                  "host": ["{{domain}}{{endpoint_address_add}}"]
                }
              },
              "response": []
            },
            {
              "_postman_id": "69cb6dea-0f01-45b8-9f22-ad92dddbad4d",
              "name": "Add duplicate",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e7040cce-66f9-4831-afb2-91d0260893f2",
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "01b7ee39-0d4a-48aa-9993-59a5207c1a82",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 500\", function () {",
                      "    pm.response.to.have.status(500);",
                      "});",
                      "",
                      "var jsonData = pm.response.json();",
                      "pm.test(\"Incorrect validation error structure\", function () {",
                      "    pm.expect(jsonData.error.code).to.eql('EVALIDATION');",
                      "    pm.expect(jsonData.error.validationErrors.length).to.be.gte(1);",
                      "    jsonData.error.validationErrors.forEach((error) => {",
                      "        pm.expect(error.path).to.not.be.empty;",
                      "        pm.expect(error.message).to.not.be.empty;",
                      "    })",
                      "});",
                      "",
                      "pm.test(\"Correct duplicate error is shown\", function () {",
                      "    pm.expect(jsonData.error.validationErrors[0].path).to.be.eq('street1');",
                      "    pm.expect(jsonData.error.validationErrors[0].message).to.be.eq('\"Street1\" has already been taken');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw":
                    "{\n\t\"address\": {\n        \"street1\": \"TEST ADDRESS\",\n        \"country\": \"GB\"\n\t}\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_address_add}}",
                  "host": ["{{domain}}{{endpoint_address_add}}"]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "d94ea5da-3737-4228-8483-0c0eed3be53f",
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Cache-Control",
                "value": "no-cache"
              }
            ],
            "body": {
              "mode": "raw",
              "raw":
                "{\n\t\"strategy\": \"basic\",\n\t\"parameters\": {\n\t\t\"login\": \"{{username}}\",\n\t\t\"password\": \"{{password}}\"\n\t}\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_login}}",
              "host": ["{{domain}}{{endpoint_login}}"]
            }
          },
          "response": []
        },
        {
          "_postman_id": "a913da8f-f09e-44d6-9a90-5e2551ac2e03",
          "name": "All field mapping",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "edc199c9-ca81-41fc-b9ae-f6ad9c1dfb51",
                "type": "text/javascript",
                "exec": [
                  "// Create a seed to have a randomized data set",
                  "pm.variables.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(1000)));"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "311d5dbb-594d-4a9d-84e7-2a1f9765a9b8",
                "type": "text/javascript",
                "exec": ["pm.test(\"Status code is 200\", function () {", "    pm.response.to.have.status(200);", "})"]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw":
                "{\n\t\"address\": {\n\t\t\"firstName\": \"{{seed}}-firstname\",\n        \"lastName\": \"{{seed}}-lastname\",\n        \"company\": \"{{seed}}-company\",\n        \"street1\": \"{{seed}}-street1\",\n        \"street2\": \"{{seed}}-street2\",\n        \"city\": \"{{seed}}-city\",\n        \"state\": \"{{seed}}-state\",\n        \"phone\": \"{{seed}}-phone\",\n        \"zipCode\": \"{{seed}}-zip\",\n        \"country\": \"US\",\n        \"province\":\"Arizona\"\n\t}\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_address_add}}",
              "host": ["{{domain}}{{endpoint_address_add}}"]
            }
          },
          "response": []
        },
        {
          "_postman_id": "4f07e84e-5ec5-4ca2-bb15-47ca8120a689",
          "name": "Province: Arizona",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "edc199c9-ca81-41fc-b9ae-f6ad9c1dfb51",
                "type": "text/javascript",
                "exec": [
                  "// Create a seed to have a randomized data set",
                  "pm.variables.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(1000)));"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "311d5dbb-594d-4a9d-84e7-2a1f9765a9b8",
                "type": "text/javascript",
                "exec": ["pm.test(\"Status code is 200\", function () {", "    pm.response.to.have.status(200);", "})"]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw":
                "{\n\t\"address\": {\n\t\t\"street1\": \"{{seed}}-street1\",\n        \"country\": \"US\",\n        \"province\":\"Arizona\"\n\t}\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_address_add}}",
              "host": ["{{domain}}{{endpoint_address_add}}"]
            }
          },
          "response": []
        },
        {
          "_postman_id": "ef353d8a-aeda-4b86-b33d-7a24d4390529",
          "name": "Province: AZ",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "2f1a4978-eff1-47a9-ae0e-5d678fdb2958",
                "type": "text/javascript",
                "exec": [
                  "// Create a seed to have a randomized data set",
                  "pm.variables.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(1000)));"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "60494d18-4ca5-414a-afb4-2d1ac2f96cff",
                "type": "text/javascript",
                "exec": ["pm.test(\"Status code is 200\", function () {", "    pm.response.to.have.status(200);", "})"]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw":
                "{\n\t\"address\": {\n\t\t\"street1\": \"{{seed}}-street1\",\n        \"country\": \"US\",\n        \"province\":\"AZ\"\n\t}\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_address_add}}",
              "host": ["{{domain}}{{endpoint_address_add}}"]
            }
          },
          "response": []
        },
        {
          "_postman_id": "dff4ccf0-35b5-413c-8301-61c91ef4675c",
          "name": "Country: United States",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ad065b1b-1360-4697-bbef-ce64df85a5f2",
                "type": "text/javascript",
                "exec": [
                  "// Create a seed to have a randomized data set",
                  "pm.variables.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(1000)));"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "60494d18-4ca5-414a-afb4-2d1ac2f96cff",
                "type": "text/javascript",
                "exec": ["pm.test(\"Status code is 200\", function () {", "    pm.response.to.have.status(200);", "})"]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw":
                "{\n\t\"address\": {\n\t\t\"street1\": \"{{seed}}-street1\",\n        \"country\": \"United States\",\n        \"province\":\"AZ\"\n\t}\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_address_add}}",
              "host": ["{{domain}}{{endpoint_address_add}}"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
